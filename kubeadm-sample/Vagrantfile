BOX_IMAGE    = "bento/ubuntu-18.04"
# BOX_VERSION  = "7.6.1810"
MASTER_COUNT = 1
NODE_COUNT   = 1

# MASTER_IP    = "192.168.26.10"
# MASTER_PORT  = "8443"
NODE_IP_NW   = "192.168.26."
# POD_NW_CIDR  = "10.244.0.0/16"

init_script = <<SCRIPT
#!/bin/bash -e

# Disable swap
sudo swapoff -a

# Install Docker CE
## Setup repository
### Update apt index
sudo apt-get update

### Install packages
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

### Add Docker official GPG key
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

### Add docker apt repository
sudo add-apt-repository \
    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) \
    stable"

## Install docker ce
sudo apt-get update
sudo apt-get install -y docker-ce=18.06.2~ce~3-0~ubuntu

# Setup daemon
sudo mkdir -p /etc/docker
sudo bash -c "cat <<EOF > /etc/docker/daemon.json 
{
  \\"exec-opts\\": [\\"native.cgroupdriver=systemd\\"],
  \\"log-driver\\": \\"json-file\\",
  \\"log-opts\\": {
    \\"max-size\\": \\"100m\\"
  },
  \\"storage-driver\\": \\"overlay2\\"
}
EOF"

sudo mkdir -p /etc/systemd/system/docker.service.d

# Restart docker
sudo systemctl daemon-reload
sudo systemctl restart docker


# Install Kubelet & Kubeadm
sudo apt-get update && sudo apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
SCRIPT

master_script = <<SCRIPT
#!/bin/bash -e

sudo kubeadm init --control-plane-endpoint $(ifconfig eth1 | awk -F ' *|:' '/inet /{print $3}')
sudo mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# Install Calico
kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml
SCRIPT

Vagrant.configure("2") do |config|
    config.vm.box = BOX_IMAGE
    # config.vm.box_version = BOX_VERSION
    # config.vm.box_check_update = false
    config.vm.boot_timeout = 600
  
    config.vm.provider "virtualbox" do |l|
        l.cpus = 1
        l.memory = "1024"
    end
  
    config.vm.provision :shell, inline: init_script
  
    # config.hostmanager.enabled = true
    # config.hostmanager.manage_guest = true
  
    (1..MASTER_COUNT).each do |i|
        hostname= "master#{i}"
        config.vm.define(hostname) do |subconfig|
            subconfig.vm.hostname = hostname
            # 何故か↓だと ssh がタイムアウトする。
            # subconfig.vm.network :private_network, nic_type: "virtio", ip: NODE_IP_NW + "#{i + 10}", virtualbox__intnet: "intnet"
            subconfig.vm.network "private_network", ip: NODE_IP_NW + "#{i + 10}", virtualbox__intnet: "intnet"
            subconfig.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--cpus", "2"]
                vb.customize ["modifyvm", :id, "--memory", "2048"]
            end
            subconfig.vm.provision :shell, inline: master_script
        end
    end
  
    (1..NODE_COUNT).each do |i|
        config.vm.define("node#{i}") do |subconfig|
            subconfig.vm.hostname = "node#{i}"
            # 何故か↓だと ssh がタイムアウトする。
            # subconfig.vm.network :private_network, nic_type: "virtio", ip: NODE_IP_NW + "#{i + 20}", virtualbox__intnet: "intnet"
            subconfig.vm.network "private_network", ip: NODE_IP_NW + "#{i + 20}", virtualbox__intnet: "intnet"
            # subconfig.vm.provision :shell, inline: node_script
        end
    end
end